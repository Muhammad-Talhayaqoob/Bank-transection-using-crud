// <auto-generated />
using Bank_transection_using_crud.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank_transection_using_crud.Migrations
{
    [DbContext(typeof(TransectionDB))]
    partial class TransectionDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bank_transection_using_crud.Models.Transection", b =>
                {
                    b.Property<int>("Transectionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Transectionid"), 1L, 1);

                    b.Property<string>("Accountnumber")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Bankname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Beneficiaryname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Swiftcode")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Transectionid");

                    b.ToTable("Transections");
                });
#pragma warning restore 612, 618
        }
    }
}
